/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,:after,:before{box-sizing:border-box}html{overflow-X:hidden}body{font-family:'Open Sans',sans-serif;background-color:#f2f3f8;margin:0;padding:0}h1,h2,li,ol,p,ul{margin:0;padding:0}a{color:inherit;text-decoration:none}.stop-preloader{opacity:0;pointer-events:none}html{scroll-behavior:smooth}body{overflow-x:hidden}.nav-top{z-index:2;top:0;width:100vw;background-color:#fff;display:-webkit-flex;display:flex;-webkit-justify-content:space-between;justify-content:space-between;-webkit-align-items:center;align-items:center;padding:.5rem 2rem}@media screen and (min-width:599px){.nav-top{-webkit-flex-wrap:nowrap;flex-wrap:nowrap;padding:.5rem}}@media screen and (min-width:1200px){.nav-top{max-width:80rem;margin:0 auto}}.menu{display:-webkit-flex;display:flex;border-left:3px solid #22201d;border-bottom:3px solid #22201d;overflow:hidden;-webkit-transform:translateX(90vw);transform:translateX(90vw);top:2.5rem;right:0;position:absolute;-webkit-flex-direction:column;flex-direction:column;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;padding:2rem;height:93vh;width:80vw;-webkit-justify-content:flex-start;justify-content:flex-start;-webkit-align-items:flex-start;align-items:flex-start;transition:-webkit-transform 1s ease-in;transition:transform 1s ease-in;transition:transform 1s ease-in,-webkit-transform 1s ease-in;background-color:#fff}@media screen and (min-width:599px){.menu{height:90vh;-webkit-flex-wrap:wrap;flex-wrap:wrap}}@media screen and (min-width:599px) and (min-height:420px){.menu{padding:.5rem;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-justify-content:flex-end;justify-content:flex-end;margin-left:2rem;-webkit-transform:translateX(0);transform:translateX(0);top:0;position:relative;-webkit-flex-direction:row;flex-direction:row;height:100%;width:100%;border-left:none;border-bottom:none}}.menu__item{position:relative;max-width:15rem;opacity:0;background-color:#fff;list-style:none;display:block;color:#22201d;transition:-webkit-transform .3s ease-in;transition:transform .3s ease-in;transition:transform .3s ease-in,-webkit-transform .3s ease-in;margin-bottom:2rem}@media screen and (min-width:599px) and (min-height:420px){.menu__item{opacity:1}}.menu__item:before{border-radius:3px;position:absolute;content:'';background-color:#22201d;background:linear-gradient(to left,#22201d,#000);border:none;bottom:-4px;left:30%;height:5px;width:0%}.menu__item:active::before,.menu__item:hover::before{-webkit-animation:button-load-bottom .5s forwards 0s;animation:button-load-bottom .5s forwards 0s}.menu__item .link{text-decoration:none;color:inherit;font-weight:700;display:block;font-size:1.5rem;min-width:8rem;padding:.5rem}@media screen and (min-width:599px){.menu__item .link{opacity:1}}@media screen and (min-width:599px) and (min-height:420px){.menu__item .link{padding:.5rem;font-size:1.05rem}}.menu-mobile__burger{display:block;margin-left:1rem}.menu-mobile__burger:hover{cursor:pointer}.menu-mobile__burger .burger__line{position:relative;height:3px;width:1.5rem;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s;background-color:#22201d;margin-top:5px}.menu-mobile__burger--toggled .burger__line:first-of-type{-webkit-transform:rotateZ(90deg);transform:rotateZ(90deg);-webkit-transform-origin:top left;transform-origin:top left;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.menu-mobile__burger--toggled .burger__line:nth-of-type(2){-webkit-transform:rotateZ(30deg);transform:rotateZ(30deg);-webkit-transform-origin:top left;transform-origin:top left;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.menu-mobile__burger--toggled .burger__line:nth-of-type(3){-webkit-transform:rotateZ(-90deg);transform:rotateZ(-90deg);-webkit-transform-origin:bottom left;transform-origin:bottom left;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}@media screen and (min-width:599px) and (min-height:420px){.menu-mobile__burger{display:none}}.toggle-mobile-nav{-webkit-transform:translateX(0);transform:translateX(0);transition:-webkit-transform 1s ease-in;transition:transform 1s ease-in;transition:transform 1s ease-in,-webkit-transform 1s ease-in}@-webkit-keyframes button-load-bottom{0%{width:0%}100%{width:40%}}@keyframes button-load-bottom{0%{width:0%}100%{width:40%}}@-webkit-keyframes linkFading{from{opacity:0;-webkit-transform:translateX(100px);transform:translateX(100px)}to{opacity:1;-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes linkFading{from{opacity:0;-webkit-transform:translateX(100px);transform:translateX(100px)}to{opacity:1;-webkit-transform:translateX(0);transform:translateX(0)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
