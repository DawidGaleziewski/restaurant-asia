/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@import url(https://fonts.googleapis.com/css?family=Lato:400,400i,700&display=swap);html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,:after,:before{box-sizing:border-box}html{overflow-X:hidden;padding:0;margin:0}body{font-family:'Open Sans',sans-serif;background-color:#fff;margin:0;padding:0}h1,h2,h3,h4,h5,li,ol,p,ul{margin:0;padding:0}a{color:inherit;text-decoration:none}@font-face{font-family:gang_of_threeregular;src:url(scss/fonts/go3v2-webfont.woff2) format("woff2"),url(/scss/fonts/go3v2-webfont.woff) format("woff");font-weight:400;font-style:normal}.section-header__title{text-align:center;font-size:3rem;text-transform:uppercase;font-family:gang_of_threeregular;color:#fff;text-shadow:0 0 3px rgba(0,0,0,.88)}.section-header__subtitle{text-align:center;font-size:1rem;color:#fff;text-shadow:0 0 3px rgba(0,0,0,.88)}.section-header--secondary{margin-bottom:4rem}.section-header--secondary__title{text-shadow:none;color:#22201d}.section-header--secondary__subtitle{text-shadow:none;color:#22201d}.carousel{border:.5px solid #e8e8e8;position:relative;width:100%;margin:0 auto}.carousel__image{width:100%;-webkit-transform:scaleX(0);transform:scaleX(0);height:100%;object-fit:cover;transition:-webkit-transform .5s ease-in 0s;transition:transform .5s ease-in 0s;transition:transform .5s ease-in 0s,-webkit-transform .5s ease-in 0s}.current-slide .carousel__image{-webkit-transform:scaleX(1);transform:scaleX(1);transition:-webkit-transform .5s ease-in 0s;transition:transform .5s ease-in 0s;transition:transform .5s ease-in 0s,-webkit-transform .5s ease-in 0s}.carousel__track-container{height:100%;width:100%;position:relative;overflow:hidden}.carousel__track{position:relative;padding:0;margin:0;list-style:none;height:100%;transition:-webkit-transform .5s ease-in 0s;transition:transform .5s ease-in 0s;transition:transform .5s ease-in 0s,-webkit-transform .5s ease-in 0s}.carousel__slide{position:absolute;top:0;bottom:0;width:100%}.carousel__button{position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);background-color:#22211fbe;height:50px;width:30px;border:0;cursor:pointer}.carousel__button--left{left:0;z-index:1}.carousel__button--right{right:0;z-index:1}.button__image{display:block;width:12px;margin:auto}.is-hidden{display:none}.item{list-style:none;background-color:#22211f;border:.5px solid #e8e8e8;width:17rem}.item__img{width:100%;object-fit:cover;border:.5px solid #e8e8e8;border-bottom:none}.item .description{position:relative;text-align:center;padding:2rem;padding-bottom:4rem}.item .description__title{font-size:1.3rem;color:#fff;margin:0;margin-bottom:2rem}.item .description__text{color:#5e5e5e}.item .button-primary{font-family:inherit;border:none;color:#fffefe;background-color:#ee322a;padding:.7rem;text-transform:uppercase;font-weight:700;font-size:.8rem;position:absolute;left:50%;bottom:0;-webkit-transform:translateY(50%) translateX(-50%);transform:translateY(50%) translateX(-50%)}.item .button-primary:hover{cursor:pointer}body{font-family:Lato,sans-serif}/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on June 30, 2019 */@font-face{font-family:gang_of_threeregular;src:url(go3v2-webfont.woff2) format("woff2"),url(go3v2-webfont.woff) format("woff");font-weight:400;font-style:normal}.stop-preloader{opacity:0;pointer-events:none}html{scroll-behavior:smooth}body{overflow-x:hidden}.nav-top{z-index:3;position:relative;width:100vw;background-color:#fff;padding:.5rem 2rem}@media screen and (min-width:599px){.nav-top{-webkit-flex-wrap:nowrap;flex-wrap:nowrap;padding:0}}@media screen and (min-width:1200px){.nav-top{margin-top:8rem}}.nav-top .menu{display:-webkit-flex;display:flex;border-left:3px solid #22201d;border-bottom:3px solid #22201d;overflow:hidden;-webkit-transform:translateX(90vw);transform:translateX(90vw);top:2.5rem;right:0;position:absolute;-webkit-flex-direction:column;flex-direction:column;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;padding:2rem;height:93vh;width:80vw;-webkit-justify-content:flex-start;justify-content:flex-start;-webkit-align-items:flex-start;align-items:flex-start;transition:-webkit-transform 1s ease-in;transition:transform 1s ease-in;transition:transform 1s ease-in,-webkit-transform 1s ease-in;background-color:#fff}@media screen and (min-width:599px){.nav-top .menu{height:90vh;-webkit-flex-wrap:wrap;flex-wrap:wrap}}@media screen and (min-width:599px) and (min-height:420px){.nav-top .menu{padding:2rem;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-justify-content:center;justify-content:center;margin-left:2rem;-webkit-transform:translateX(0);transform:translateX(0);top:0;position:relative;-webkit-flex-direction:row;flex-direction:row;height:100%;width:100%;border-left:none;border-bottom:none}}@media screen and (min-width:1200px){.nav-top .menu{max-width:80rem;margin:0 auto;border-top:3px dotted #e8e8e8}}.nav-top .menu__item{text-transform:uppercase;position:relative;max-width:15rem;opacity:0;background-color:#fff;list-style:none;display:block;color:#22201d;transition:-webkit-transform .3s ease-in;transition:transform .3s ease-in;transition:transform .3s ease-in,-webkit-transform .3s ease-in;margin-bottom:2rem}@media screen and (min-width:599px) and (min-height:420px){.nav-top .menu__item{margin-bottom:0;margin-right:1rem;text-align:center;opacity:1}}.nav-top .menu__item:before{border-radius:3px;position:absolute;content:'';background-color:#22201d;background:linear-gradient(to left,#22201d,#000);border:none;bottom:-4px;left:30%;height:5px;width:0%}.nav-top .menu__item:active::before,.nav-top .menu__item:hover::before{-webkit-animation:button-load-bottom .5s forwards 0s;animation:button-load-bottom .5s forwards 0s}.nav-top .menu__item .link{text-decoration:none;color:inherit;font-weight:700;display:block;font-size:1.5rem;padding:.5rem}@media screen and (min-width:599px){.nav-top .menu__item .link{opacity:1}}@media screen and (min-width:599px) and (min-height:420px){.nav-top .menu__item .link{padding:.5rem;font-size:1.05rem}}.nav-top .menu-mobile__burger{display:block;margin-left:1rem}.nav-top .menu-mobile__burger:hover{cursor:pointer}.nav-top .menu-mobile__burger .burger__line{position:relative;height:3px;width:1.5rem;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s;background-color:#22201d;margin-top:5px}.nav-top .menu-mobile__burger--toggled .burger__line:first-of-type{-webkit-transform:rotateZ(90deg);transform:rotateZ(90deg);-webkit-transform-origin:top left;transform-origin:top left;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.nav-top .menu-mobile__burger--toggled .burger__line:nth-of-type(2){-webkit-transform:rotateZ(30deg);transform:rotateZ(30deg);-webkit-transform-origin:top left;transform-origin:top left;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.nav-top .menu-mobile__burger--toggled .burger__line:nth-of-type(3){-webkit-transform:rotateZ(-90deg);transform:rotateZ(-90deg);-webkit-transform-origin:bottom left;transform-origin:bottom left;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}@media screen and (min-width:599px) and (min-height:420px){.nav-top .menu-mobile__burger{display:none}}.toggle-mobile-nav{-webkit-transform:translateX(0)!important;transform:translateX(0)!important;transition:-webkit-transform 1s ease-in;transition:transform 1s ease-in;transition:transform 1s ease-in,-webkit-transform 1s ease-in}@-webkit-keyframes button-load-bottom{0%{width:0%}100%{width:40%}}@keyframes button-load-bottom{0%{width:0%}100%{width:40%}}@-webkit-keyframes linkFading{from{opacity:0;-webkit-transform:translateX(100px);transform:translateX(100px)}to{opacity:1;-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes linkFading{from{opacity:0;-webkit-transform:translateX(100px);transform:translateX(100px)}to{opacity:1;-webkit-transform:translateX(0);transform:translateX(0)}}.main-header{max-width:80rem;margin:0 auto;position:relative}.main-header .section-header{position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);text-shadow:0 0 3px rgba(0,0,0,.88);z-index:1}.main-header .carousel{height:37.5rem}.main-header .nav-secondary .menu{margin-top:2rem;list-style:none;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap}@media screen and (min-width:1200px){.main-header .nav-secondary .menu{-webkit-flex-direction:row;flex-direction:row;-webkit-justify-content:space-between;justify-content:space-between}}.main-header .nav-secondary .menu__item{margin:0 auto;margin-bottom:2rem;position:relative;height:18.75rem;width:18.75rem}@media screen and (min-width:1200px){.main-header .nav-secondary .menu__item{margin:0;-webkit-flex-direction:row;flex-direction:row;-webkit-justify-content:space-between;justify-content:space-between}}.main-header .nav-secondary .menu__item .link__title{color:#fff;text-shadow:0 0 3px rgba(0,0,0,.88);font-weight:700;font-size:1.5rem;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%)}.main-header .nav-secondary .menu__item .link__img{border:.5px solid #e8e8e8;height:100%;width:100%;object-fit:cover}.dishes-popular{max-width:80rem;margin:4rem auto}.dishes-popular .carousel{border:none}.dishes-popular .carousel__track-container{overflow-y:visible}.dishes-popular .carousel__track{position:relative;height:29rem;width:60rem}.dishes-popular .carousel__slide{display:inline-block;position:absolute;top:0;left:0}.video-presentation{border:.5px solid #e8e8e8;position:relative;max-width:80rem;margin:0 auto;background-image:url(../../img-min/video-presentation/wok.jpeg);background-position:center;background-repeat:no-repeat;background-size:cover;min-height:37.5rem}.video-presentation .video-play{position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%)}.video-presentation .video-play .btn-play{font-family:inherit;border:none;color:#fffefe;background-color:#ee322a;padding:.7rem;text-transform:uppercase;font-weight:700;font-size:.8rem;display:block;margin:0 auto;padding:1rem}.video-presentation .video-play .btn-play:hover{cursor:pointer}.video-presentation .video-play .btn-play i{font-size:1rem}.video-presentation .youtube-video{width:100%;height:37.5rem;display:none}.about{max-width:80rem;margin:4rem auto}.about .about-media{display:-webkit-flex;display:flex;-webkit-justify-content:space-between;justify-content:space-between;-webkit-align-items:flex-start;align-items:flex-start;-webkit-flex-direction:column;flex-direction:column}@media screen and (min-width:1200px){.about .about-media{-webkit-flex-direction:row;flex-direction:row}}.about .about-media .carousel{width:100%;height:37.5rem;margin:0}@media screen and (min-width:1200px){.about .about-media .carousel{max-width:49%}}.about .about-media .articles-about{margin-top:1.5rem;display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-flex-wrap:wrap;flex-wrap:wrap;width:100%;-webkit-justify-content:space-between;justify-content:space-between;-webkit-align-items:flex-start;align-items:flex-start}@media screen and (min-width:1200px){.about .about-media .articles-about{max-width:49%;-webkit-flex-direction:row;flex-direction:row;margin-top:0}}.about .about-media .articles-about .article{margin:0 auto;margin-bottom:1.5rem;width:18.75rem;position:relative;min-height:18rem;padding:1.5rem;background-image:url(../../img-min/lampions.jpeg);background-position:center;background-size:cover}@media screen and (min-width:1200px){.about .about-media .articles-about .article{width:100%}}.about .about-media .articles-about .article--secondary{width:18.75rem;margin:0 auto;margin-bottom:1.5rem}@media screen and (min-width:1200px){.about .about-media .articles-about .article--secondary{width:48%;margin:0}}.about .about-media .articles-about .article .article__title{color:#fff;text-shadow:0 0 3px rgba(0,0,0,.88);font-size:1.5rem}.about .about-media .articles-about .article .article__meta-information{background-color:#fff;color:#22201d;text-transform:uppercase;font-weight:700;padding:.5rem;display:inline-block;margin-right:1rem;font-size:.7rem;margin-top:1rem}.about .about-media .articles-about .article .article__btn{font-family:inherit;border:none;color:#fffefe;background-color:#ee322a;padding:.7rem;text-transform:uppercase;font-weight:700;font-size:.8rem;margin:auto 0;padding:1rem;position:absolute;bottom:2rem;left:1.5rem;font-weight:700;font-size:1rem}.about .about-media .articles-about .article .article__btn:hover{cursor:pointer}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
